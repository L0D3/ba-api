upstream unicorn {
  server unix:/tmp/unicorn.ba-api.sock fail_timeout=0;
}
server {
	listen 80 ;

	server_name ba-api.no-ip.org;

	root /home/webdeployer/apps/ba-api/current/public;

	location / {
#all requests are sent to the UNIX socket
		proxy_pass  http://unicorn;
		proxy_redirect     off;

		proxy_set_header   Host             $host;
		proxy_set_header   X-Real-IP        $remote_addr;
		proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

		client_max_body_size       10m;
		client_body_buffer_size    128k;

		proxy_connect_timeout      90;
		proxy_send_timeout         90;
		proxy_read_timeout         90;

		proxy_buffer_size          4k;
		proxy_buffers              4 32k;
		proxy_busy_buffers_size    64k;
		proxy_temp_file_write_size 64k;
	}

# if the request is for a static resource, nginx should serve it directly
# and add a far future expires header to it, making the browser
# cache the resource and navigate faster over the website
# this probably needs some work with Rails 3.1's asset pipe_line
#    location ~ ^/(images|javascripts|stylesheets|system)/  {
#      root /home/webdeployer/apps/ba-api/current/public;
#      expires max;
#      break;
#    }
}


server {
    listen 443;

    server_name ba-api.no-ip.org;
    ssl on;
    ssl_certificate server.crt;
    ssl_certificate_key server.key;
    root /home/webdeployer/apps/ba-api/current/public;

    location ^~ /assets/ {
	    gzip_static on;
	    expires max;
#	    add_header Cache-Control public;
    }
    location / {
        #all requests are sent to the UNIX socket
        proxy_pass  http://unicorn;
        proxy_redirect     off;

        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;

        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
        proxy_set_header   X-Forwarded-Proto https;
    }

    # if the request is for a static resource, nginx should serve it directly
    # and add a far future expires header to it, making the browser
    # cache the resource and navigate faster over the website
    # this probably needs some work with Rails 3.1's asset pipe_line
#    location ~ ^/(images|javascripts|stylesheets|system)/  {
#      root /home/webdeployer/apps/ba-api/current/public;
#      expires max;
#      break;
#    }
}
